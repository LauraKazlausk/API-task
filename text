// API nuoroda: https://jsonplaceholder.typicode.com

// 1. Sukurti puslapį, kuriame bus atvaizduojami įrašai (index.html). Kiekvienas įrašas turi:
//   1.1. Pavadinimą.
//   1.2. Pastraipą su įrašo (post) turiniu.
//   1.3. Autorių. Tai turi būti nuoroda. Kol kas ji gali niekur nevesti.
// 2. Po kiekvienu įrašu (post) pridėti posto komentarus. Kiekvienas komentaras turi:
//   2.1. Komentaro pavadinimą.
//   2.2. Komentaro turinį - pastraipą.
//   2.3. Komentarą parašiusio asmens el. pašto adresą.
// 3. Sukurti naują puslapį user.html, kuriame bus atvaizduojama vartotojo informacija:
//   3.1. Pilnas vardas.
//   3.2. Vartotojo vardas / nick'as.
//   3.3. El. paštas.
//   3.4. Adresas, kuris turės gatvę, namo numerį, miestą, pašto kodą. Paspaudus ant adreso, pagal koordinates, turėtų atidaryti šios vietos Google Maps.
//   3.5. Telefono numeris.
//   3.6. Internetinio puslapio adresas.
//   3.7. Įmonės, kurioje dirba, pavadinimas.
// 4. Šiame puslapyje turės būti atvaizduojama:
//   4.1. Visi vartotojo parašyti įrašai (posts). Post'ų įrašuose nereikia atvaizduoti komentarų. Kiekvienas post'as turi turėti nuorodą.
//   4.2. Visi vartotojo sukurti foto albumai. Kiekvienas albumas turės:
//     4.2.1. Albumo pavadinimą, kuris turi būti nuoroda. Kol kas nuoroda gali niekur nevesti.
// 5. Pagrindiniame (index.html) puslapyje pridėti skiltį, kurioje atvaizduojamas albumų sąrašas. Kiekvienas albumas turės:
//   5.1. Pavadinimą, o paspaudus ant jo - nukreipiama į albumą (album.html).
//   5.2. Albumo autoriaus vardą.
//   5.3. Nuotrauką.

// 6. Sukurti naują puslapį album.html ir jame atvaizduoti:
//   6.1. Albumo pavadinimą.
//   6.2. Album autoriaus vardą. Paspaudus ant vardo - nukreipiama į autoriaus puslapį.
//   6.3. Skiltis, kurioje atvaizduojamos visos albumo nuotraukos.

// 7. Sukurti naują puslapį post.html ir jame atvaizduoti:
//   7.1. Įrašo (post) pavadinimą.
//   7.2. Autoriaus vardą. Paspaudus ant autoriaus vardo, turėtų atidaryti autoriaus puslapį.
//   7.3. Įrašo turinį.
//   7.4. Įrašo komentarus. Komentarai turi būti atvaizduojami tokiu pačiu principu kaip ir pagrindiniame puslapyje.
//   7.5. Nuoroda „Kiti autoriaus įrašai", kurią paspaudus bus nukreipiama į naują puslapį posts.html. Jame bus atvaizduojami visi šio vartotojo įrašai.




// 8. Sukurti vartotojų puslapį (users.html), kuriame būtų atvaizduotas vartotojų sąrašas.
//   8.1. Prie vartotojo turėtu būti jo vardas ir parašytų post'ų skaičius.
//   8.2. Paspaudus ant vartotojo - nukreipiama į jo puslapį.
// 9. Tokiu pačiu principu, kaip ir vartotojų puslapį, sukurti puslapį albumams (albums.html).
//   9.1. Prie kiekvieno albumo turi būti:
//     9.1.1. Parašytas jo pavadinimas.
//     9.1.2. Parašytas vartotojo, sukūrusio šį albumą, vardas.
//     9.1.3. Albume esančių nuotraukų skaičius.
//     9.1.4. Viena nuotrauka




// 10. Sukurti navigacijos elementą, kuris nukreips į puslapius:
// 10.1. Home / pagrindinis puslapis.
// 10.2. Users / vartotojų puslapis.
// 10.3. Albums / albumų puslapis.
// 10.4. Posts / pranešimų puslapis.






// async function init() {
//     const contentWrapper = document.querySelector('#content-wrapper');
  
//     const postsListELement = await renderPosts();
//     const albumsListElement = await renderAlbums();
  
//     contentWrapper.append(postsListELement, albumsListElement);
//   }
  
//   async function renderPosts() {
//     const res = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=15&_embed=comments&_expand=user');
//     const posts = await res.json();
  
//     let postsList = document.createElement('div');
//     postsList.id = 'posts-list';
  
//     posts.map(post => {
//       let postItem = document.createElement('div');
//       postItem.classList.add('post-item');
  
//       let postTitleElement = document.createElement('h2');
//       postTitleElement.classList.add('post-title');
//       postTitleElement.textContent = post.title;
  
//       let postAuthorElement = document.createElement('span');
//       postAuthorElement.classList.add('post-author');
//       postAuthorElement.innerHTML = `Author: <a href="./user.html?user_id=${post.user.id}">${post.user.name}</a>`;
  
//       let postContentElement = document.createElement('p');
//       postContentElement.classList.add('post-content');
//       postContentElement.textContent = post.body;
  
//       let commentsWrapperElement = document.createElement('div');
//       commentsWrapperElement.classList.add('comments-wrapper');
  
//       let commentsSectionTitle = document.createElement('h3');
//       commentsSectionTitle.classList.add('comments-section-title');
//       commentsSectionTitle.textContent = 'Comments:';
  
//       let commentsListElement = document.createElement('div');
//       commentsListElement.classList.add('comments-list');
      
//       post.comments.map(comment => {
//         let commentItem = document.createElement('div');
//         commentItem.classList.add('comment-item');
  
//         commentItem.innerHTML = `<h4 class="comment-title">${comment.name}</h4>
//                                 <span class="comment-author">Commented by: ${comment.email}</span>
//                                 <p class="comment-content">${comment.body}</p>`;
  
//         commentsListElement.append(commentItem);
//       })
  
//       commentsWrapperElement.append(commentsSectionTitle, commentsListElement);
  
//       postItem.append(postTitleElement, postAuthorElement, postContentElement, commentsWrapperElement);
//       postsList.append(postItem);
//     })
  
//     return postsList;
//   }
  
//   async function renderAlbums() {
//     const res = await fetch(`https://jsonplaceholder.typicode.com/albums?_limit=15&_embed=photos&_expand=user`);
//     const albums = await res.json();
  
//     let albumsList = document.createElement('div');
//     albumsList.id = 'albums-list';
  
//     albums.map(album => {
//       let albumItem = document.createElement('div');
//       albumItem.classList.add('album-item');
//       albumsList.append(albumItem);
  
//       albumItem.innerHTML = `<h3 class="album-title"><a href="./album.html?album_id=${album.id}">${album.title}</a></h3>
//                             <div class="album-author">Album created by: ${album.user.name}</div>
//                             <img src="${album.photos[0].thumbnailUrl}" alt="${album.photos[0].title}">`;
//     })
  
//     return albumsList;
//   }
  
//   init();
